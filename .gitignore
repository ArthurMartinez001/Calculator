*.class

# Package Files #
*.jar
*.war
*.ear

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class CalculatorForm extends JFrame // extends JFrame used to create a window
{
	private GridBagLayout layout; //gridbagLayout helps manage Java implementations
	private GridBagConstraints constraints; // the gridbagconstraints will specify components that are laid in the class
	JTextField firstNumberTxt, secondNumberTxt, answerTxt;
	JRadioButton addBtn, subBtn, multBtn, divBtn; // JRadioButton this will allow radio buttons to be selected by the user
	JButton calculateBtn, exitBtn; // this will allow user to choose a push button as per their choice
	
	public static void main(String[] args)
	{
		CalculatorForm application = new CalculatorForm();
		application.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
		application.setSize(300, 275);
		application.setVisible( true );
	}
	/// the following is to help set buttons for calculations
public CalculatorForm() {
	super( "A Simple Calculator Form");
	layout = new GridBagLayout();
	setLayout( layout );
	constraints = new GridBagConstraints();
	firstNumberTxt = new JTextField ( 5 );
	secondNumberTxt = new JTextField ( 5 );
	answerTxt = new JTextField(5);
	addBtn = new JRadioButton ( "add", true );
	subBtn = new JRadioButton ("subtract", false );
	multBtn = new JRadioButton("multiply", false);
	divBtn = new JRadioButton ("divide", false);
	
	calculateBtn = new JButton("calculate");
	exitBtn = new JButton("exit");
	
	ButtonGroup radioGrp = new ButtonGroup();
	radioGrp.add( addBtn );
	radioGrp.add( subBtn );
	radioGrp.add( multBtn );
	radioGrp.add( divBtn );
	
	/// this section is the what JLabel is going to display
	JLabel firstNumberLbl = new JLabel("First number: "),
		   operationLbl = new JLabel("Operation: "),
		   secondNumberLbl = new JLabel("Second number: "),
		   answerLbl = new JLabel( "Answer: ");
	
	addComponent( firstNumberLbl, 0, 0, 1, 1, GridBagConstraints.EAST );
	addComponent( firstNumberTxt, 0, 1, 1, 1, GridBagConstraints.WEST);
	addComponent( operationLbl, 1, 0, 1, 4, GridBagConstraints.EAST);
	addComponent(addBtn, 1, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(subBtn, 2, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(multBtn, 3, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(divBtn, 4, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(secondNumberLbl, 5, 0, 1, 1, GridBagConstraints.EAST);
	addComponent(secondNumberTxt, 5, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(answerLbl, 6, 0, 1, 1, GridBagConstraints.EAST );
	addComponent(answerTxt, 6, 1, 1, 1, GridBagConstraints.WEST);
	addComponent(calculateBtn, 7, 0, 1,1, GridBagConstraints.WEST);
	addComponent(exitBtn, 7, 1, 1, 1, GridBagConstraints.EAST);
	
	calculateBtn.addActionListener( new Calculator());
	
	exitBtn.addActionListener( new Exiter());
} // end of constructor

// this will help give the constraints of the calculator
private void addComponent(Component component, int row, int column, int width, int height, int anch){
	constraints.gridx = column;
	constraints.gridy = row;
	constraints.gridwidth = width;
	constraints.anchor = anch;
	constraints.weighty = 5;
	layout.setConstraints(component,constraints );
	add ( component );
	
}

// receiving action events when occurred. 
private class Calculator implements ActionListener {
	public void actionPerformed (ActionEvent event){
		String firstString, secondString;
		int choice;
		int firstNumber, secondNumber;
		
		firstString = firstNumberTxt.getText();
		secondString = secondNumberTxt.getText();
		
		if ( firstString.length() < 1 || secondString.length() < 1 ) {
			answerTxt.setText( "INVALID" ); return;
		}
			
			firstNumber = Integer.parseInt( firstString );
			secondNumber = Integer.parseInt( secondString );
			
			if ( addBtn.isSelected() ) choice = 0;
			else if (subBtn.isSelected()) choice = 1;
			else if (multBtn.isSelected() ) choice = 2;
			else choice = 3;
			
		switch (choice)
		{
		case 0: answerTxt.setText( ( firstNumber + secondNumber ) + "" ); break;
		case 1: answerTxt.setText( ( firstNumber - secondNumber ) + "" ); break;
		case 2: answerTxt.setText( ( firstNumber * secondNumber ) + "" ); break;
		default: if ( secondNumber != 0 ) {
					answerTxt.setText( (firstNumber / secondNumber ) + "" ); break;
		} else {
			answerTxt.setText( "Invalid" ); break;
		}	
		}// end of switch
	} // end of method performed

} // end of Calculator
		
private class Exiter implements ActionListener {
	public void actionPerformed( ActionEvent event ) {
		System.exit(0);
}
}
}
